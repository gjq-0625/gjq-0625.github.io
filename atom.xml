<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gjq-0625.github.io</id>
    <title>锦旗飘飘的私人笔记</title>
    <updated>2020-12-31T06:48:46.409Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gjq-0625.github.io"/>
    <link rel="self" href="https://gjq-0625.github.io/atom.xml"/>
    <subtitle>温故而知新，可以为师矣</subtitle>
    <logo>https://gjq-0625.github.io/images/avatar.png</logo>
    <icon>https://gjq-0625.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 锦旗飘飘的私人笔记</rights>
    <entry>
        <title type="html"><![CDATA[jsp跳转servelt]]></title>
        <id>https://gjq-0625.github.io/post/jsp-tiao-zhuan-servelt/</id>
        <link href="https://gjq-0625.github.io/post/jsp-tiao-zhuan-servelt/">
        </link>
        <updated>2020-12-31T06:37:32.000Z</updated>
        <content type="html"><![CDATA[<p>方法一：1.按照照片写地址<img src="https://gjq-0625.github.io/post-images/1609396678245.png" alt="" loading="lazy"><br>
2.<img src="https://gjq-0625.github.io/post-images/1609396700929.png" alt="" loading="lazy"><br>
方法二：<img src="https://gjq-0625.github.io/post-images/1609397320529.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java笔记]]></title>
        <id>https://gjq-0625.github.io/post/java-bi-ji/</id>
        <link href="https://gjq-0625.github.io/post/java-bi-ji/">
        </link>
        <updated>2020-12-30T00:46:01.000Z</updated>
        <content type="html"><![CDATA[<p>1.子类只能调用父类的构造方法，不能继承。<br>
2.访问权限由高到低，public,protected,default.<br>
3.类中权限默认是default.<br>
4.子类可以隐藏从父类继承的成员变量和方法，如果在子类中想使用被子类隐藏的成员变量或方法，可以使用关键字super;<br>
5.抽象类中可以有抽象方法，也可以有构造方法及其他修饰符修饰的方法<br>
6.用final修饰的方法在子类中不能进行重写，但是用abstract修饰的方法要求子类必须对这个方法进行重写。<br>
7.接口中的方法可以是抽象方法，静态方法，和default方法，private无protected。<br>
8.接口中只能有常量，不能有变量，接口中的常量必须是public static final修饰并且必须赋值<br>
9.接口中可以实现方法，也可以使用空方法，但是在实现接口中的方法时返回值和参数必须和接口中一样<br>
10.重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。即外壳不变，核心重写！<br>
重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。<br>
11.final不能有子类但是可以有父类。<br>
12.用static声名方法表明这个方法在不生成类的实例时可直接被类调用,而abstract方法不能被调用<br>
13.接口中的抽象方法默认时public的，但是抽象类的抽象方法时default修饰的，降低了访问权限，所以是不对的<br>
14.new的对象是谁，优先用谁，优先调用中的成员方法。<br>
15.子类上转型后，如果重写了父类中的方法，优先调用子类重写后的方法，子类中没有的则调用父类的方法</p>
<p>16.接口：包括一组容器接口，定义了容器中的元素允许进行的合法操作，不涉及具体的实现，常见的有Collection、List、Set、Map等，主要分为两大分支：<br>
Collection分支：存储管理无依赖关系的一组对象<br>
Map分支：以键值对形式存储和管理数据<br>
实现类：上述容器接口的实现类，对接口中的方法提供具体的实现，<br>
常见的有ArrayList、HashSet、HashTable、HashMap等<br>
算法：对集合中存储的元素对象提供遍历、排序等操作，常见的有Iterator、Comparator等</p>
<p>17.Set接口：<br>
与Collection接口方法基本一致，提供了以无序的方式存取不重复的数据。</p>
<p>18List接口：<br>
扩展了Collection接口的功能，提供了以索引号方式顺序存取数据的方式。<br>
Java中list、set、map的输出格式<br>
Java中的集合主要有list、set、map三种。其输出格式也不全相同，直接输出这个集合对象，测试代码个输出如下所示。</p>
<ol start="19">
<li></li>
</ol>
<p>import java.util.ArrayList;<br>
import java.util.HashMap;<br>
import java.util.HashSet;</p>
<p>public class Test {</p>
<p>public static void main(String[] args) {<br>
/<em>1. List</em>/<br>
ArrayList<Integer> list = new ArrayList<Integer>();<br>
for(int i=0;i&lt;20;i++){<br>
list.add(i);<br>
}<br>
for(int i=15;i&lt;25;i++){//重复的元素会被再次插入<br>
list.add(i);<br>
}<br>
/<em>按照插入的顺序输出，多次试验输出结果都是按照插入的顺序</em>/<br>
System.out.println(&quot;list = &quot;+list);//输出格式如list = [1, 2, 3, 4,]</p>
<p>/<em>2. Set</em>/<br>
HashSet<Integer> set = new HashSet<Integer>();<br>
for(int i=0;i&lt;20;i++){<br>
set.add(i);<br>
}<br>
for(int i=15;i&lt;25;i++){//重复的元素不会被再次插入<br>
set.add(i);<br>
}<br>
/<em>不是按照插入的顺序输出，多次试验输出结果都是可能不同</em>/<br>
System.out.println(&quot;set = &quot;+set);//set = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 24]</p>
<p>/<em>3. Map</em>/<br>
HashMap&lt;Character,Integer&gt; map = new HashMap&lt;Character,Integer&gt;();<br>
map.put('a', 1);<br>
map.put('b', 2);<br>
map.put('c', 3);<br>
/<em>输出的时候不是按照插入的顺序，所以多次运行输出的结果可能不一样</em>/<br>
System.out.println(&quot;map = &quot;+map);//map = {b=2, c=3, a=1}<br>
}</p>
<p>}</p>
<p>20.Key对象唯一不重复，value对象允许重复在MAP中<br>
21.HashMap类 key对象必须实现hashCode()和equals()方法<br>
22.如果我们自己定义的一个类的对象要加入到TreeSet当中，那么这个类必须要实现Comparable接口。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[idea配置tomcat(最新版idea2020.02)]]></title>
        <id>https://gjq-0625.github.io/post/idea-pei-zhi-tomcatzui-xin-ban-idea202002/</id>
        <link href="https://gjq-0625.github.io/post/idea-pei-zhi-tomcatzui-xin-ban-idea202002/">
        </link>
        <updated>2020-12-29T23:15:27.000Z</updated>
        <content type="html"><![CDATA[<p>1.打开idea点击File New project<br>
<img src="https://gjq-0625.github.io/post-images/1609284668263.jpg" alt="" loading="lazy"><br>
2.新建一个Java工程<img src="https://gjq-0625.github.io/post-images/1609284675630.jpg" alt="" loading="lazy"><br>
3.给project起名字<img src="https://gjq-0625.github.io/post-images/1609284682578.jpg" alt="" loading="lazy"><br>
4.右击新建的工程 点击Add Framework Support<img src="https://gjq-0625.github.io/post-images/1609284686725.jpg" alt="" loading="lazy"><br>
5.勾选java EE Web Application<img src="https://gjq-0625.github.io/post-images/1609284692191.jpg" alt="" loading="lazy"><br>
6.点击run Edit Configurations<img src="https://gjq-0625.github.io/post-images/1609285131448.png" alt="" loading="lazy"><br>
7.然后点击加号找<img src="https://gjq-0625.github.io/post-images/1609285407696.png" alt="" loading="lazy"><br>
8.正常的话就应该是这一步<img src="https://gjq-0625.github.io/post-images/1609285171712.png" alt="" loading="lazy"><br>
9.如果出现这个警告<img src="https://gjq-0625.github.io/post-images/1609285486433.jpg" alt="" loading="lazy"><br>
10.然后新建Modules，右键点击新建的工程，选择Add勾选Web<img src="https://gjq-0625.github.io/post-images/1609285708916.png" alt="" loading="lazy"><br>
11.然后它会默认Path的值这是正确的不用修改,但是Web Resource Directories位置一般不对应该修改为你创建的project下的index.jsp路径<img src="https://gjq-0625.github.io/post-images/1609285932000.png" alt="" loading="lazy"><br>
12.然后选Artifacts 添加 Web application:Exploded 选择 From Modules然后点击OK即可<img src="https://gjq-0625.github.io/post-images/1609285981648.png" alt="" loading="lazy"><br>
13.然后点击run找到Edit Configurations<img src="https://gjq-0625.github.io/post-images/1609286175734.png" alt="" loading="lazy"><br>
14.然后点击加号找到Tomcat Server<img src="https://gjq-0625.github.io/post-images/1609286320795.png" alt="" loading="lazy"><br>
15.点击Configure找到自己的tomcat版本路径,在After launch找到已经安装好的浏览器<img src="https://gjq-0625.github.io/post-images/1609286388392.png" alt="" loading="lazy"><br>
16.然后选择Artifact<img src="https://gjq-0625.github.io/post-images/1609286750786.png" alt="" loading="lazy"><br>
17.然后点击Deployment出现  :war exploded就完成了<img src="https://gjq-0625.github.io/post-images/1609288782517.png" alt="" loading="lazy"><br>
18.特别注意这个<img src="https://gjq-0625.github.io/post-images/1609288644367.png" alt="" loading="lazy"><br>
和这个<img src="https://gjq-0625.github.io/post-images/1609290074590.png" alt="" loading="lazy"><br>
然后就对了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[BootStrap]]></title>
        <id>https://gjq-0625.github.io/post/bootstrap/</id>
        <link href="https://gjq-0625.github.io/post/bootstrap/">
        </link>
        <updated>2020-12-26T02:10:02.000Z</updated>
        <content type="html"><![CDATA[<p>1.简介<br>
基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。<br>
自适应页面，页面会根据窗口宽度动态的发生变化<br>
一个前端框架，规定好了大量的各式各样的样式我们可以直接去使用<br>
Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。<br>
直接使用 Bootstrap 提供的 CSS 样式表<br>
2.快速入门</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript]]></title>
        <id>https://gjq-0625.github.io/post/javascript/</id>
        <link href="https://gjq-0625.github.io/post/javascript/">
        </link>
        <updated>2020-12-26T00:08:20.000Z</updated>
        <content type="html"><![CDATA[<p>1.onclick属性用于给当前div元素绑定单击事件，当单击div范围后，会立即出发点击单击事件，执行showdate<br>
2.document.getElementById(id的值)-通过元素的id获取一个元素js对象<br>
3.js对象.innerHTML-获取元素内部的所有内容/修改元素内部的内容</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java and mysql]]></title>
        <id>https://gjq-0625.github.io/post/java-and-mysql/</id>
        <link href="https://gjq-0625.github.io/post/java-and-mysql/">
        </link>
        <updated>2020-12-24T00:38:43.000Z</updated>
        <content type="html"><![CDATA[<p>1、SQL注入，使用PreparedStatement时，是可以在SQL语句中，对值所在的位置使用?这种占位符的<br>
* 使用占位符之后，实际的值，可以通过另外一份放在数组中的参数来代表。此时PreparedStatement会对<br>
* 值做特殊的处理，往往特殊处理后，就会导致不法分子的恶意注入的SQL代码失效<br>
* 2、提升性能，使用PreparedStatement之后，其实结构类似的SQL语句，都变成一样的了，因为值的地方<br>
* 都会变成?，那么一条SQL语句，在MySQL中只会编译一次，后面的SQL语句过来，就直接拿编译后的执行计划<br>
* 加上不同的参数直接执行，可以大大提升性能</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[php study ]]></title>
        <id>https://gjq-0625.github.io/post/first-php-study/</id>
        <link href="https://gjq-0625.github.io/post/first-php-study/">
        </link>
        <updated>2020-12-11T04:55:30.000Z</updated>
        <content type="html"><![CDATA[<h2>1.换行时应该用</h2>
<p>echo &quot;&lt;.br/&gt;&quot;;<br>
echo 'Test'.' &lt;.br/&gt;';<br>
&quot;.&quot;这个符号是用来连接字符串的<br>
echo 'one';<br>
echo &lt;.br/&gt;;</p>
<h2>2.当希望某个局部变量不要被删除时需要用到static修饰函数中的变量</h2>
<p>function myTest(){<br>
static $x=0;<br>
echo <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">x;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">;</span></span></span></span>x++;<br>
}<br>
myTest();<br>
输出：0<br>
myTest();<br>
输出：1<br>
myTest();<br>
输出：2<br>
myTest();<br>
输出：3</p>
<h2>3.输出echo，print，print_r</h2>
在 PHP 中有两个基本的输出方式： echo 和 print。
<p>本章节中我们会详细讨论两个语句的用法，并在实例中演示如何使用 echo 和 print。</p>
<p>PHP echo ,print 和 print_r 语句<br>
echo , print 和 print_r的区别:</p>
<p>echo   - 可以输出一个或多个字符串<br>
print   - 只能输出简单类型变量的值,如int,string<br>
print_r - 可以输出复杂类型变量的值,如数组,对象<br>
提示：echo输出的速度比print快,echo是PHP语句,没有返回值,print和print_r是PHP函数,函数有返回值。<br>
print返回值为1(int类型),print_r返回值为true(bool类型)。<br>
print_r在输出String,integer,float将打印本身，如果给出的是array将会以一定格式输出<br>
eg：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>a</mi><mi>r</mi><mi>s</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo>(</mo><mi mathvariant="normal">&quot;</mi><mi>b</mi><mi>w</mi><mi>m</mi><mi mathvariant="normal">&quot;</mi><mo separator="true">,</mo><mi mathvariant="normal">&quot;</mi><mi>a</mi><mi>o</mi><mi>d</mi><mi>i</mi><mi mathvariant="normal">&quot;</mi><mo separator="true">,</mo><mi mathvariant="normal">&quot;</mi><mi>m</mi><mi>u</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">&quot;</mi><mo separator="true">,</mo><mi mathvariant="normal">&quot;</mi><mi>t</mi><mi>o</mi><mi>y</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>)</mo><mo separator="true">;</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>n</mi><msub><mi>t</mi><mi>r</mi></msub><mo>(</mo></mrow><annotation encoding="application/x-tex">cars=array(&quot;bwm&quot;,&quot;aodi&quot;,&quot;mustang&quot;,&quot;toyota&quot;);
        print_r(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord">&quot;</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">m</span><span class="mord">&quot;</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">a</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord">&quot;</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">&quot;</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span></span></span></span>cars);//Array ( [0] =&gt; bwm [1] =&gt; aodi [2] =&gt; mustang [3] =&gt; toyota )</p>
<h2>4.运算符	名称	描述</h2>
++ x	预递增	x 加 1，然后返回 x
x ++	后递增	返回 x，然后 x 加 1
-- x	预递减	x 减 1，然后返回 x
x --	后递减	返回 x，然后 x 减 1
<h2>5.PHP 比较运算符</h2>
比较操作符可以让您比较两个值：
<p>运算符	名称	描述	实例<br>
x == y	等于	如果 x 等于 y，则返回 true;	<br>
x=5,y=8<br>
x= =y 返回 false<br>
x = = = y	,恒等于,如果 x 等于 y，且它们类型相同，则返回 true;<br>
5= = =&quot;5&quot; 返回 false<br>
x != y	不等于	如果 x 不等于 y，则返回 true;<br>
5!=8 返回 true<br>
x &lt;&gt; y	不等于	如果 x 不等于 y，则返回 true;	<br>
5&lt;&gt;8 返回 true<br>
x !== y	不恒等于	如果 x 不等于 y，或它们类型不相同，则返回 true;<br>
5!==&quot;5&quot; 返回 true<br>
x &gt; y	大于	如果 x 大于 y，则返回 true;	<br>
5&gt;8 返回 false<br>
x &lt; y	小于	如果 x 小于 y，则返回 true;	<br>
5&lt; 8 返回 true<br>
x &gt;= y	大于等于	如果 x 大于或者等于 y，则返回 true;	<br>
5&gt;=8 返回 false<br>
x &lt;= y	小于等于	如果 x 小于或者等于 y，则返回 true;	<br>
5&lt;=8 返回 true</p>
<h2>6.PHP 逻辑运算符</h2>
运算符	名称	描述	实例
<p>x and y	与	如果 x 和 y 都为 true，则返回 true；	<br>
x=6<br>
y=3<br>
(x &lt; 10 and y &gt; 1) 返回 true<br>
x or y	或	如果 x 和 y 至少有一个为 true，则返回 true	；<br>
x=6<br>
y=3<br>
(6 or 5) 返回 true<br>
x xor y	异或	如果 x 和 y 有且仅有一个为 true，则返回 true；	<br>
x=6<br>
y=3<br>
(6 xor 3) 返回 false<br>
x &amp;&amp; y	与	如果 x 和 y 都为 true，则返回 true	；<br>
x=6<br>
y=3<br>
(x &lt; 10 &amp;&amp; y &gt; 1) 返回 true<br>
x || y	或	如果 x 和 y 至少有一个为 true，则返回 true ；	<br>
x=6<br>
y=3<br>
(5 || 5) 返回 false<br>
! x	非	如果 x 不为 true，则返回 true ；<br>
x=6<br>
y=3<br>
!(x==y) 返回 true</p>
<h2>7.PHP 数组运算符</h2>
运算符	名称	描述
x + y	集合	x 和 y 的集合;
x == y	相等	如果 x 和 y 具有相同的键/值对，则返回 true;
x === y	恒等	如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true;
x != y	不相等	如果 x 不等于 y，则返回 true;
x <> y	不相等	如果 x 不等于 y，则返回 true;
x !== y	不恒等	如果 x 不等于 y，则返回 true;
<h2>8.constant,static</h2>
1.在访问PHP类中的成员变量或方法时，如果被引用的变量或者方法被声明成const（定义常量）或者static（声明静态）,那么就必须使用操作符::,反之如果被引用的变量或者方法没有被声明成const或者static,那么就必须使用操作符->。
<p>另外，如果从类的内部访问const或者static变量或者方法,那么就必须使用自引用的self，反之如果从类的内部访问不为const或者static变量或者方法,那么就必须使用自引用的$this。<br>
(1)constant关键字</p>
<p>class MyClass<br>
{<br>
const constant = '常量值';</p>
<pre><code>            function showConstant() {
            echo  self::constant . PHP_EOL;
 }
</code></pre>
<p>}</p>
<p>echo MyClass::constant . PHP_EOL;</p>
<p>$classname = &quot;MyClass&quot;;<br>
echo $classname::constant . PHP_EOL; // 自 5.3.0 起</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>M</mi><mi>y</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>(</mo><mo>)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">class = new MyClass();
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span>class-&gt;showConstant();</p>
<p>echo $class::constant . PHP_EOL; // 自 PHP 5.3.0 起</p>
<p>(2)static关键字</p>
<p>class Foo {<br>
public static $my_static = 'foo';</p>
<p>public function staticValue() {<br>
return self::$my_static;<br>
}<br>
}</p>
<p>print Foo::<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><msub><mi>y</mi><mi>s</mi></msub><mi>t</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>c</mi><mi mathvariant="normal">.</mi><mi>P</mi><mi>H</mi><msub><mi>P</mi><mi>E</mi></msub><mi>O</mi><mi>L</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">my_static . PHP_EOL;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mpunct">;</span></span></span></span>foo = new Foo();</p>
<p>print $foo-&gt;staticValue() . PHP_EOL;<br>
////	<br>
执行以上程序，输出结果为：</p>
<p>foo<br>
foo</p>
<h2>9.抽象类</h2>
任何一个类，如果它里面至少有一个方法是被声明为抽象的，那么这个类就必须被声明为抽象的。
<p>定义为抽象的类不能被实例化。</p>
<p>被定义为抽象的方法只是声明了其调用方式（参数），不能定义其具体的功能实现。</p>
<p>继承一个抽象类的时候，子类必须定义父类中的所有抽象方法；另外，这些方法的访问控制必须和父类中一样（或者更为宽松）。例如某个抽象方法被声明为受保护的，那么子类中实现的方法就应该声明为受保护的或者公有的，而不能定义为私有的。<br>
<img src="https://gjq-0625.github.io/post-images/1607784651775.jpg" alt="" loading="lazy"><br>
<img src="https://gjq-0625.github.io/post-images/1607784673042.jpg" alt="" loading="lazy"><br>
<img src="https://gjq-0625.github.io/post-images/1607784681109.jpg" alt="" loading="lazy"></p>
<h2>10.接口</h2>
使用接口（interface），可以指定某个类必须实现哪些方法，但不需要定义这些方法的具体内容。
<p>接口是通过 interface 关键字来定义的，就像定义一个标准的类一样，但其中定义所有的方法都是空的。</p>
<p>接口中定义的所有方法都必须是公有，这是接口的特性。</p>
<p>要实现一个接口，使用 implements 操作符。类中必须实现接口中定义的所有方法，否则会报一个致命错误。类可以实现多个接口，用逗号来分隔多个接口的名称</p>
<h2>11.连接数据库</h2>
<?php
$dsn='mysql:dbname=php10-7;host=127.0.0.1';
$pdo=new PDO($dsn,'root','521718');
<p>//<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>q</mi><mi>l</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>I</mi><mi>N</mi><mi>S</mi><mi>E</mi><mi>R</mi><mi>T</mi><mi>I</mi><mi>N</mi><mi>T</mi><msup><mi>O</mi><mo mathvariant="normal">′</mo></msup><mi>m</mi><mi>s</mi><msup><mi>g</mi><mo mathvariant="normal">′</mo></msup><msup><mo>(</mo><mo mathvariant="normal">′</mo></msup><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>n</mi><mi>a</mi><mi>m</mi><msup><mi>e</mi><mo mathvariant="normal">′</mo></msup><msup><mo separator="true">,</mo><mo mathvariant="normal">′</mo></msup><mi>c</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>n</mi><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo>)</mo><mi>V</mi><mi>A</mi><mi>L</mi><mi>U</mi><mi>E</mi><mi>S</mi><msup><mo>(</mo><mo mathvariant="normal">′</mo></msup><mn>12</mn><msup><mn>3</mn><mo mathvariant="normal">′</mo></msup><msup><mo separator="true">,</mo><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">用</mi><mi mathvariant="normal">户</mi><msup><mi mathvariant="normal">名</mi><mo mathvariant="normal">′</mo></msup><mo>)</mo><mi mathvariant="normal">&quot;</mi><mo separator="true">;</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">sql = &quot;INSERT INTO &#x27;msg&#x27; (&#x27;username&#x27;,&#x27;content&#x27;) VALUES (&#x27;123&#x27;,&#x27;用户名&#x27;)&quot;;
//</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen"><span class="mopen">(</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">A</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen"><span class="mopen">(</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">户</span><span class="mord"><span class="mord cjk_fallback">名</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">&quot;</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">/</span></span></span></span>sth = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>d</mi><mi>o</mi><mo>−</mo><mo>&gt;</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mo>(</mo></mrow><annotation encoding="application/x-tex">pdo-&gt;prepare(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span></span></span></span>sql);<br>
//$sth-&gt;execute();</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>q</mi><mi>l</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>∗</mo><mi>f</mi><mi>r</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>s</mi><mi>g</mi><mi mathvariant="normal">&quot;</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">sql=&quot;select * from msg&quot;;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">&quot;</span><span class="mpunct">;</span></span></span></span>sth=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>d</mi><mi>o</mi><mo>−</mo><mo>&gt;</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mo>(</mo></mrow><annotation encoding="application/x-tex">pdo-&gt;prepare(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span></span></span></span>sql);<br>
$sth-&gt;execute();</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi><mo>=</mo></mrow><annotation encoding="application/x-tex">data=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>sth-&gt;fetchAll();<br>
var_dump($data[0]['username']);<br>
?&gt;</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://gjq-0625.github.io/post/hello-gridea/</id>
        <link href="https://gjq-0625.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>